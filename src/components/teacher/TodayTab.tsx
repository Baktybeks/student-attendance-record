// src/components/teacher/TodayTab.tsx

"use client";

import React, { useState } from "react";
import { Calendar, CheckCircle, BarChart3, RefreshCw } from "lucide-react";
import { useAuthStore } from "@/store/authStore";
import { useClassesWithDetails } from "@/services/classService";
import { AttendanceStatus, ClassWithDetails } from "@/types";
import { ClassCard } from "./ClassCard";
import { AttendanceModalToday } from "./AttendanceModalToday";
import { LoadingSpinner } from "@/components/ui/LoadingSpinner";
import { EmptyState } from "@/components/ui/EmptyState";
import { Card } from "@/components/ui/Card";
import { Button } from "@/components/ui/Button";

// –õ–æ–∫–∞–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è ClassCard
interface ClassItem {
  id?: string;
  subject: string;
  group: string;
  time: string;
  classroom: string;
  studentsCount: number;
  attendanceMarked: boolean;
  groupId?: string; // –î–æ–±–∞–≤–ª—è–µ–º –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
  stats?: {
    present: number;
    absent: number;
    late: number;
    total: number;
    percentage: number;
  };
  recentAttendance?: Array<{
    name: string;
    status: AttendanceStatus;
  }>;
}

export const TodayTab: React.FC = () => {
  const { user } = useAuthStore();
  const [selectedDate, setSelectedDate] = useState(new Date());
  const [showMockData, setShowMockData] = useState(false);
  const [attendanceModal, setAttendanceModal] = useState<{
    isOpen: boolean;
    classItem: ClassItem | null;
  }>({
    isOpen: false,
    classItem: null,
  });

  // –ü–æ–ª—É—á–∞–µ–º –∑–∞–Ω—è—Ç–∏—è –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è –Ω–∞ –≤—ã–±—Ä–∞–Ω–Ω—É—é –¥–∞—Ç—É
  const {
    data: todaysClasses = [],
    isLoading,
    error,
    refetch,
  } = useClassesWithDetails({
    teacherId: user?.$id,
    date: selectedDate.toISOString().split("T")[0],
  });

  // Mock –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
  const mockClasses: ClassItem[] = [
    {
      id: "mock-1",
      subject: "–ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑",
      group: "–ò–¢-301",
      groupId: "mock-group-1", // –î–æ–±–∞–≤–ª—è–µ–º groupId –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
      time: "09:00 - 10:30",
      classroom: "–ê—É–¥–∏—Ç–æ—Ä–∏—è 205",
      studentsCount: 25,
      attendanceMarked: false,
      stats: {
        present: 22,
        absent: 3,
        late: 0,
        total: 25,
        percentage: 88,
      },
      recentAttendance: [
        { name: "–ò–≤–∞–Ω–æ–≤ –ò.–ò.", status: AttendanceStatus.PRESENT },
        { name: "–ü–µ—Ç—Ä–æ–≤ –ü.–ü.", status: AttendanceStatus.ABSENT },
        { name: "–°–∏–¥–æ—Ä–æ–≤ –°.–°.", status: AttendanceStatus.LATE },
      ],
    },
    {
      id: "mock-2",
      subject: "–õ–∏–Ω–µ–π–Ω–∞—è –∞–ª–≥–µ–±—Ä–∞",
      group: "–ò–¢-301",
      groupId: "mock-group-1", // –î–æ–±–∞–≤–ª—è–µ–º groupId –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
      time: "11:45 - 13:15",
      classroom: "–ê—É–¥–∏—Ç–æ—Ä–∏—è 307",
      studentsCount: 25,
      attendanceMarked: true,
      stats: {
        present: 24,
        absent: 1,
        late: 0,
        total: 25,
        percentage: 96,
      },
      recentAttendance: [
        { name: "–ö–æ–∑–ª–æ–≤ –ö.–ö.", status: AttendanceStatus.PRESENT },
        { name: "–§–µ–¥–æ—Ä–æ–≤ –§.–§.", status: AttendanceStatus.PRESENT },
        { name: "–ú–æ—Ä–æ–∑–æ–≤ –ú.–ú.", status: AttendanceStatus.ABSENT },
      ],
    },
  ];

  // –§—É–Ω–∫—Ü–∏—è –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è ClassWithDetails –≤ ClassItem
  const convertToClassItem = (classData: ClassWithDetails): ClassItem => {
    console.log("üîÑ –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –∑–∞–Ω—è—Ç–∏–µ:", classData);

    // –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –ø—Ä–∞–≤–∏–ª—å–Ω–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞
    const subject = classData.schedule?.subject?.name || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø—Ä–µ–¥–º–µ—Ç";
    const group =
      classData.schedule?.group?.name ||
      classData.schedule?.group?.code ||
      "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –≥—Ä—É–ø–ø–∞";
    const time = `${classData.startTime} - ${classData.endTime}`;
    const classroom = classData.classroom || "–ù–µ —É–∫–∞–∑–∞–Ω–∞";

    // –ü–æ–ª—É—á–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –∏–∑ –≥—Ä—É–ø–ø—ã
    const studentsCount = classData.schedule?.group?.studentsCount || 25;

    const result: ClassItem = {
      id: classData.$id,
      subject,
      group,
      time,
      classroom,
      studentsCount,
      attendanceMarked: classData.isCompleted || false,
      groupId: classData.groupId, // –î–æ–±–∞–≤–ª—è–µ–º groupId –¥–ª—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
      stats: {
        present: 0,
        absent: 0,
        late: 0,
        total: studentsCount,
        percentage: 0,
      },
      recentAttendance: [],
    };

    console.log("‚úÖ –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ –≤ ClassItem:", result);
    return result;
  };

  // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ API –∏–ª–∏ mock –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
  const convertedClasses = todaysClasses.map(convertToClassItem);

  const currentClasses: ClassItem[] = showMockData
    ? mockClasses
    : convertedClasses;

  console.log("=== DEBUG INFO ===");
  console.log("üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ID:", user?.$id);
  console.log("üìÖ –í—ã–±—Ä–∞–Ω–Ω–∞—è –¥–∞—Ç–∞:", selectedDate.toISOString().split("T")[0]);
  console.log(
    "üåç –î–µ–Ω—å –Ω–µ–¥–µ–ª–∏:",
    selectedDate.toLocaleDateString("ru-RU", { weekday: "long" })
  );
  console.log("üìö –°—ã—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ API:", todaysClasses);
  console.log("üîÑ –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∑–∞–Ω—è—Ç–∏—è:", convertedClasses);
  console.log("üé≠ –ò—Å–ø–æ–ª—å–∑—É–µ–º mock –¥–∞–Ω–Ω—ã–µ:", showMockData);
  console.log("üìä –§–∏–Ω–∞–ª—å–Ω—ã–µ –∑–∞–Ω—è—Ç–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è:", currentClasses);
  console.log("‚è≥ –ó–∞–≥—Ä—É–∑–∫–∞:", isLoading);
  console.log("‚ùå –û—à–∏–±–∫–∞ API:", error);

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –¥–∞—Ç—ã
  const changeDate = (days: number) => {
    const newDate = new Date(selectedDate);
    newDate.setDate(selectedDate.getDate() + days);
    setSelectedDate(newDate);
    setShowMockData(false); // –°–±—Ä–∞—Å—ã–≤–∞–µ–º mock –ø—Ä–∏ —Å–º–µ–Ω–µ –¥–∞—Ç—ã
  };

  const isToday = selectedDate.toDateString() === new Date().toDateString();

  const handleMarkAttendance = (classId: string) => {
    console.log(
      "üìù –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø–æ—Å–µ—â–∞–µ–º–æ—Å—Ç–∏ –¥–ª—è –∑–∞–Ω—è—Ç–∏—è:",
      classId
    );

    const classItem = currentClasses.find((cls) => cls.id === classId);
    if (classItem) {
      setAttendanceModal({
        isOpen: true,
        classItem,
      });
    } else {
      console.error("‚ùå –ó–∞–Ω—è—Ç–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ:", classId);
    }
  };

  const handleCloseAttendanceModal = () => {
    setAttendanceModal({
      isOpen: false,
      classItem: null,
    });
  };

  const handleSaveAttendance = () => {
    console.log("‚úÖ –ü–æ—Å–µ—â–∞–µ–º–æ—Å—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞, –æ–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ");
    // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ—Å–ª–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
    refetch();
  };

  const handleViewDetails = (classId: string) => {
    console.log("üëÅÔ∏è –ü—Ä–æ—Å–º–æ—Ç—Ä –¥–µ—Ç–∞–ª–µ–π –∑–∞–Ω—è—Ç–∏—è:", classId);
    // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –¥–µ—Ç–∞–ª–µ–π
  };

  const handleExportData = (classId: string) => {
    console.log("üì§ –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∑–∞–Ω—è—Ç–∏—è:", classId);
    // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞
  };

  const handleRefresh = () => {
    console.log("üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö...");
    refetch();
  };

  return (
    <div className="space-y-8">
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ –¥–Ω—è —Å –Ω–∞–≤–∏–≥–∞—Ü–∏–µ–π */}
      <div className="flex items-center justify-between">
        <div>
          <h1 className="text-2xl font-bold text-slate-900">
            {isToday ? "–°–µ–≥–æ–¥–Ω—è" : "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ"},{" "}
            {selectedDate.toLocaleDateString("ru-RU", {
              weekday: "long",
              year: "numeric",
              month: "long",
              day: "numeric",
            })}
          </h1>
          <p className="text-slate-600 mt-1">
            {isLoading
              ? "–ó–∞–≥—Ä—É–∑–∫–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è..."
              : currentClasses.length > 0
              ? `${showMockData ? "[–¢–ï–°–¢] " : ""}${
                  currentClasses.length
                } –∑–∞–Ω—è—Ç–∏–π –Ω–∞ —ç—Ç—É –¥–∞—Ç—É`
              : "–ù–µ—Ç –∑–∞–Ω—è—Ç–∏–π –Ω–∞ —ç—Ç—É –¥–∞—Ç—É"}
          </p>
        </div>
        <div className="flex items-center space-x-4">
          {/* –ö–Ω–æ–ø–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è */}
          <Button
            variant="outline"
            size="sm"
            icon={
              <RefreshCw
                className={`w-4 h-4 ${isLoading ? "animate-spin" : ""}`}
              />
            }
            onClick={handleRefresh}
            disabled={isLoading}
          >
            –û–±–Ω–æ–≤–∏—Ç—å
          </Button>

          {/* –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ –¥–∞—Ç–∞–º */}
          <div className="flex items-center space-x-2">
            <Button variant="outline" size="sm" onClick={() => changeDate(-1)}>
              ‚Üê –í—á–µ—Ä–∞
            </Button>
            <Button
              variant="outline"
              size="sm"
              onClick={() => setSelectedDate(new Date())}
            >
              –°–µ–≥–æ–¥–Ω—è
            </Button>
            <Button variant="outline" size="sm" onClick={() => changeDate(1)}>
              –ó–∞–≤—Ç—Ä–∞ ‚Üí
            </Button>
          </div>

          <div className="text-right">
            <div className="text-2xl font-bold text-slate-900">
              {selectedDate.toLocaleDateString("ru-RU", { day: "2-digit" })}
            </div>
            <div className="text-sm text-slate-500">
              {selectedDate.toLocaleDateString("ru-RU", { month: "short" })}
            </div>
          </div>
        </div>
      </div>

      {/* –ó–∞–Ω—è—Ç–∏—è –Ω–∞ –≤—ã–±—Ä–∞–Ω–Ω—É—é –¥–∞—Ç—É */}
      {isLoading ? (
        <div className="space-y-8">
          <div className="animate-pulse">
            <div className="h-8 bg-slate-200 rounded w-1/3 mb-4"></div>
            <div className="h-4 bg-slate-200 rounded w-1/2 mb-8"></div>
          </div>
          <LoadingSpinner size="lg" text="–ó–∞–≥—Ä—É–∑–∫–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è..." />
        </div>
      ) : currentClasses.length > 0 ? (
        <>
          <div className="grid gap-6">
            {currentClasses.map((classItem, index) => (
              <ClassCard
                key={classItem.id || index}
                classItem={classItem}
                onMarkAttendance={handleMarkAttendance}
                onViewDetails={handleViewDetails}
                onExportData={handleExportData}
              />
            ))}
          </div>

          {/* –ë—ã—Å—Ç—Ä–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
          <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
            <Card padding="md" hover>
              <div className="flex items-center justify-between">
                <div>
                  <p className="text-sm font-medium text-slate-600">
                    –í—Å–µ–≥–æ –∑–∞–Ω—è—Ç–∏–π
                  </p>
                  <p className="text-2xl font-bold text-slate-900 mt-1">
                    {currentClasses.length}
                  </p>
                </div>
                <div className="p-3 bg-blue-100 rounded-lg">
                  <Calendar className="w-6 h-6 text-blue-600" />
                </div>
              </div>
            </Card>

            <Card padding="md" hover>
              <div className="flex items-center justify-between">
                <div>
                  <p className="text-sm font-medium text-slate-600">
                    –ó–∞–Ω—è—Ç–∏–π –ø—Ä–æ–≤–µ–¥–µ–Ω–æ
                  </p>
                  <p className="text-2xl font-bold text-slate-900 mt-1">
                    {
                      currentClasses.filter((cls) => cls.attendanceMarked)
                        .length
                    }{" "}
                    / {currentClasses.length}
                  </p>
                </div>
                <div className="p-3 bg-emerald-100 rounded-lg">
                  <CheckCircle className="w-6 h-6 text-emerald-600" />
                </div>
              </div>
            </Card>

            <Card padding="md" hover>
              <div className="flex items-center justify-between">
                <div>
                  <p className="text-sm font-medium text-slate-600">
                    –í—Å–µ–≥–æ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤
                  </p>
                  <p className="text-2xl font-bold text-slate-900 mt-1">
                    {currentClasses.reduce(
                      (sum, cls) => sum + cls.studentsCount,
                      0
                    )}
                  </p>
                </div>
                <div className="p-3 bg-purple-100 rounded-lg">
                  <BarChart3 className="w-6 h-6 text-purple-600" />
                </div>
              </div>
            </Card>
          </div>
        </>
      ) : (
        <div className="space-y-4">
          <EmptyState
            icon={<Calendar className="w-12 h-12 text-slate-400" />}
            title={error ? "–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö" : "–ù–µ—Ç –∑–∞–Ω—è—Ç–∏–π –Ω–∞ —ç—Ç—É –¥–∞—Ç—É"}
            description={
              error
                ? `–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö: ${
                    error.message || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞"
                  }`
                : `–ù–∞ ${
                    isToday ? "—Å–µ–≥–æ–¥–Ω—è" : "—ç—Ç—É –¥–∞—Ç—É"
                  } —É –≤–∞—Å –Ω–µ—Ç –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∑–∞–Ω—è—Ç–∏–π. ${
                    selectedDate.getDay() === 0 || selectedDate.getDay() === 6
                      ? "–≠—Ç–æ –≤—ã—Ö–æ–¥–Ω–æ–π –¥–µ–Ω—å."
                      : "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∏–ª–∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥—É—é –¥–∞—Ç—É."
                  }`
            }
            action={{
              label: showMockData
                ? "–°–∫—Ä—ã—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ"
                : "–ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ",
              onClick: () => setShowMockData(!showMockData),
            }}
            secondaryAction={
              error
                ? {
                    label: "–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞",
                    onClick: handleRefresh,
                  }
                : {
                    label: "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –¥—Ä—É–≥—É—é –¥–∞—Ç—É",
                    onClick: () => changeDate(1),
                  }
            }
          />

          {/* –ü–∞–Ω–µ–ª—å –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ */}
          <div className="mt-4 p-4 bg-blue-50 rounded-lg border border-blue-200">
            <h4 className="font-medium text-blue-900 mb-3">
              üîç –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö
            </h4>
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4 text-sm">
              <div>
                <p className="font-medium text-blue-800 mb-2">
                  –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã:
                </p>
                <ul className="text-blue-700 space-y-1 text-xs">
                  <li>
                    ‚Ä¢ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user?.name || "–ù–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω"} (
                    {user?.role || "–ë–µ–∑ —Ä–æ–ª–∏"})
                  </li>
                  <li>
                    ‚Ä¢ –î–µ–Ω—å –Ω–µ–¥–µ–ª–∏:{" "}
                    {selectedDate.toLocaleDateString("ru-RU", {
                      weekday: "long",
                    })}
                  </li>
                  <li>
                    ‚Ä¢ –¢–∏–ø –¥–Ω—è:{" "}
                    {selectedDate.getDay() === 0 || selectedDate.getDay() === 6
                      ? "–í—ã—Ö–æ–¥–Ω–æ–π"
                      : "–†–∞–±–æ—á–∏–π"}
                  </li>
                  <li>‚Ä¢ –ó–∞–Ω—è—Ç–∏–π –≤ –±–∞–∑–µ: {convertedClasses.length}</li>
                </ul>
              </div>
              <div>
                <p className="font-medium text-blue-800 mb-2">–î–µ–π—Å—Ç–≤–∏—è:</p>
                <div className="space-y-2">
                  <Button
                    variant="outline"
                    size="sm"
                    fullWidth
                    onClick={() =>
                      changeDate(
                        selectedDate.getDay() === 0
                          ? 1
                          : selectedDate.getDay() === 6
                          ? 2
                          : 1
                      )
                    }
                  >
                    {selectedDate.getDay() === 0 || selectedDate.getDay() === 6
                      ? "–ü–µ—Ä–µ–π—Ç–∏ –∫ –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫—É"
                      : "–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–ª–µ–¥—É—é—â–∏–π –¥–µ–Ω—å"}
                  </Button>
                  <Button
                    variant="outline"
                    size="sm"
                    fullWidth
                    onClick={() => setShowMockData(true)}
                  >
                    –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
                  </Button>
                </div>
              </div>
            </div>
          </div>

          {/* –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
          <details className="mt-4">
            <summary className="cursor-pointer p-4 bg-gray-100 rounded-lg hover:bg-gray-200">
              <span className="font-medium text-gray-900">
                üîß –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è (–¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞)
              </span>
            </summary>
            <div className="mt-2 p-4 bg-gray-50 rounded-lg">
              <div className="text-sm text-gray-600 space-y-2">
                <div>
                  <strong>ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:</strong>{" "}
                  {user?.$id || "‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω"}
                </div>
                <div>
                  <strong>–î–∞—Ç–∞ –∑–∞–ø—Ä–æ—Å–∞:</strong>{" "}
                  {selectedDate.toISOString().split("T")[0]}
                </div>
                <div>
                  <strong>–ó–∞–≥—Ä—É–∑–∫–∞:</strong> {isLoading ? "‚úÖ –î–∞" : "‚ùå –ù–µ—Ç"}
                </div>
                <div>
                  <strong>–û—à–∏–±–∫–∞:</strong>{" "}
                  {error ? `‚ùå ${error.message}` : "‚úÖ –ù–µ—Ç"}
                </div>
                <div>
                  <strong>–°—ã—Ä—ã—Ö –∑–∞–Ω—è—Ç–∏–π –∏–∑ API:</strong> {todaysClasses.length}
                </div>
                <div>
                  <strong>–£—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ:</strong> {convertedClasses.length}
                </div>

                {todaysClasses.length > 0 && (
                  <details className="mt-3">
                    <summary className="cursor-pointer font-medium text-blue-600">
                      üìã –ü–æ–∫–∞–∑–∞—Ç—å —Å—ã—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ API
                    </summary>
                    <pre className="mt-2 text-xs bg-white p-3 rounded overflow-auto max-h-60 border border-gray-200">
                      {JSON.stringify(todaysClasses, null, 2)}
                    </pre>
                  </details>
                )}

                {convertedClasses.length > 0 && (
                  <details className="mt-3">
                    <summary className="cursor-pointer font-medium text-green-600">
                      ‚úÖ –ü–æ–∫–∞–∑–∞—Ç—å –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
                    </summary>
                    <pre className="mt-2 text-xs bg-white p-3 rounded overflow-auto max-h-60 border border-gray-200">
                      {JSON.stringify(convertedClasses, null, 2)}
                    </pre>
                  </details>
                )}
              </div>
            </div>
          </details>
        </div>
      )}

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –æ—Ç–º–µ—Ç–∫–∏ –ø–æ—Å–µ—â–∞–µ–º–æ—Å—Ç–∏ */}
      {attendanceModal.isOpen && attendanceModal.classItem && (
        <AttendanceModalToday
          classItem={attendanceModal.classItem}
          isOpen={attendanceModal.isOpen}
          onClose={handleCloseAttendanceModal}
          onSave={handleSaveAttendance}
        />
      )}
    </div>
  );
};
